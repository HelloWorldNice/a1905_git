<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 接口代理
    1、namespace的值就是Mapper接口的全路径
 -->
<mapper namespace="cn.bdqn.mapper.EmployeeMapper">

    <cache/>

    <resultMap id="EmployeeResultMap" type="cn.bdqn.domain.Employee">
        <id column="id" property="id"></id>
        <result column="emp_name" property="empName"></result>
        <result column="sex" property="sex"></result>

        <association property="dept" javaType="cn.bdqn.domain.Dept"
                     select="cn.bdqn.mapper.DeptMapper.queryById"
                     column="dept_id">
        </association>

    </resultMap>

    <!-- 根据id查询员工 -->
    <select id="queryById" resultMap="EmployeeResultMap">
        select
            id,emp_name ,sex,email,birthday,address,dept_id
        from
            t_employee
        where
            id = #{id}
    </select>


    <!--  根据部门id查询该部门下的所有员工  -->
    <select id="queryByDeptId" resultType="cn.bdqn.domain.Employee">
        <include refid="queryEmployee"></include>
        WHERE
            dept_id = #{deptId}
    </select>

    <!-- 根据员工姓名、邮箱、家庭住址、性别模糊查询员工信息
    <select id="queryByCondition" resultType="cn.bdqn.domain.Employee">
        SELECT
            id, sex, emp_name as empName ,email,birthday,address
        FROM
            t_employee
        <trim prefix="where" suffixOverrides="and">
            <if test="empName != null and empName != ''">
                emp_name like concat('%',#{empName},'%') and
            </if>
            <if test="email != null and email != ''">
                email like concat('%',#{email},'%') and
            </if>
            <if test="address != null and address != ''">
                address like concat('%',#{address},'%') and
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex}
            </if>
        </trim>
    </select>   -->

    <sql id="queryEmployee">
        SELECT
            id, sex, emp_name as empName ,email,birthday,address
        FROM
            t_employee
    </sql>

    <select id="queryByCondition" resultType="cn.bdqn.domain.Employee">
        <include refid="queryEmployee"></include>
        <where>
            <choose>
                <when test="empName != null and empName != ''">
                    emp_name like concat('%',#{empName},'%')
                </when>
                <when test="email != null and email != ''">
                    email like concat('%',#{email},'%')
                </when>
                <otherwise>
                    sex = '女'
                </otherwise>
            </choose>
        </where>
    </select>

    <!--  根据员工id更新员工信息【可能更新全部字段或者更新部分字段】  -->
    <update id="updateById">
        update
            t_employee
        <set>
            <if test="empName != null and empName != ''">
                , emp_name = #{empName}
            </if>
            <if test="email != null and email != ''">
                , email = #{email}
            </if>
            <if test="address != null and address != ''">
                , address = #{address}
            </if>
        </set>
        where
            id = #{id}
    </update>

    <!-- 根据id列表查询员工信息 -->
    <select id="queryByIds_ForEach" resultType="cn.bdqn.domain.Employee">
        SELECT
            id, sex, emp_name as empName ,email,birthday,address
        FROM
            t_employee
        <where>
            id in (
                <foreach collection="array" item="empId" separator=",">
                    #{empId}
                </foreach>
            )
        </where>
    </select>

    <!-- 根据id列表查询员工信息 -->
    <select id="queryByIds_ForEach_List" resultType="cn.bdqn.domain.Employee">
        SELECT
            id, sex, emp_name as empName ,email,birthday,address
        FROM
            t_employee
        <where>
            id in
            <foreach collection="list" item="empId" separator="," open="(" close=")">
                #{empId}
            </foreach>
        </where>
    </select>

    <!-- 根据id列表查询员工信息 -->
    <select id="queryByMap" resultType="cn.bdqn.domain.Employee">
        SELECT
            id, sex, emp_name as empName ,email,birthday,address
        FROM
            t_employee
        <where>
            sex = #{sex} and
            id in
            <foreach collection="ids" item="empId" separator="," open="(" close=")">
                #{empId}
            </foreach>
        </where>
    </select>

    <!-- foreach实现批量保存  -->
    <insert id="insertBatch" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert INTO
	        t_employee(emp_name,sex)
        VALUES
            <foreach collection="employees" item="emp" separator=",">
                (#{emp.empName},#{emp.sex})
            </foreach>
    </insert>

    <!-- foreach实现批量保存  -->
    <insert id="insertBatch_2" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        <foreach collection="employees" item="emp" separator=";">
            insert INTO
                t_employee(emp_name,sex)
            values
                (#{emp.empName},#{emp.sex})
        </foreach>
    </insert>

    <!-- 根据id查询员工 -->
    <select id="queryById_Cache" resultType="cn.bdqn.domain.Employee">
        select
            id,emp_name as empName ,sex,email,birthday,address,dept_id
        from
            t_employee
        where
            id = #{id}
    </select>

    <insert id="save" parameterType="cn.bdqn.domain.Employee">
        insert into
            t_employee(emp_name,sex,email,birthday,address)
        values
            (#{empName},#{sex},#{email},#{birthday},#{address})
    </insert>

</mapper>